/****************************************************************************
 * PROJECT     : V.I.P. Library
 * MODULE NAME : topology.gen       * TYPE     : Function
 * AUTHOR      : MANGIN J.-F.         * CREATION : 11/04/1997
 * VERSION     : 1.1                  * REVISION :
 * LANGUAGE    : C++                  * EXAMPLE  :
 * DEVICE      : LINUX
 ****************************************************************************
 *
 * DESCRIPTION : Fill the ordered neighbor values buffer for different volume types
 *
 ****************************************************************************
 *
 * USED MODULES : math.h - alloc.h - topology.h
 *
 ****************************************************************************
 * REVISIONS :  DATE  |    AUTHOR    |       DESCRIPTION
 *--------------------|--------------|---------------------------------------
 *              / /   |              |
 ****************************************************************************/

#include <math.h>

#include <vip/alloc.h>
#include <vip/topology.h>
#include <vip/topology_static.h>

/*----------------------------------------------------------------------------*/

#TYPED_FUNC_BEGIN VipFill26NeighborhoodForLabel_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*----------------------------------------------------------------------------*/
int VipFill26NeighborhoodForLabel_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int label)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 
  int i, *Xptr, *offsetptr;
  int *X;

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipFill26NeighborhoodForLabel_GENSTRING");
      VipPrintfExit("VipFill26NeighborhoodForLabel_GENSTRING");
      return(PB);
    }
  X = top->ordered_values;
  X[0] = 0;
  Xptr = X+1;
  offsetptr = top->offset+1;
  for (i=26;i--;)  *Xptr++ = (*(adresse+ *offsetptr++) == (GENTYPE)label);

  return(OK);
}
#FUNCTION_END
#TYPED_FUNC_END

#TYPED_FUNC_BEGIN VipFill26NeighborhoodForTwoLabel_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*----------------------------------------------------------------------------*/
int VipFill26NeighborhoodForTwoLabel_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int label1, int label2)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 
  int i, *Xptr, *offsetptr;
  int *X;
  int temp;

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipFill26NeighborhoodForTwoLabel_GENSTRING");
      VipPrintfExit("VipFill26NeighborhoodForTwoLabel_GENSTRING");
      return(PB);
    }
  X = top->ordered_values;
  X[0] = 0;
  Xptr = X+1;
  offsetptr = top->offset+1;
  for (i=26;i--;)
      {
	  temp = *(adresse+ *offsetptr++);
	  *Xptr++ = (temp == (GENTYPE)label1) || (temp == (GENTYPE)label2);
      }
		       ;
  return(OK);
}
#FUNCTION_END
#TYPED_FUNC_END

/*----------------------------------------------------------------------------*/

#TYPED_FUNC_BEGIN VipFill26NeighborhoodForLabelComplement_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*----------------------------------------------------------------------------*/
int VipFill26NeighborhoodForLabelComplement_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int label)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 

  int i, *Xptr, *offsetptr;
  int *X;

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipFill26NeighborhoodForLabelComplement_GENSTRING");
      VipPrintfExit("VipFill26NeighborhoodForLabelComplement_GENSTRING");
      return(PB);
    }
  X = top->ordered_values;
  X[0] = 0;
  Xptr = X+1;
  offsetptr = top->offset+1;
  for (i=26;i--;)  *Xptr++ = (*(adresse+ *offsetptr++) != (GENTYPE)label);

  return(OK);
}
#FUNCTION_END
#TYPED_FUNC_END

/*----------------------------------------------------------------------------*/

#TYPED_FUNC_BEGIN VipFill26NeighborhoodForTwoLabelComplement_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*----------------------------------------------------------------------------*/
int VipFill26NeighborhoodForTwoLabelComplement_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int label1, int label2)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 
  int i, *Xptr, *offsetptr;
  int *X;
  int temp;

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipFill26NeighborhoodForTwoLabelComplement_GENSTRING");
      VipPrintfExit("VipFill26NeighborhoodForTwoLabelComplement_GENSTRING");
      return(PB);
    }
  X = top->ordered_values;
  X[0] = 0;
  Xptr = X+1;
  offsetptr = top->offset+1;
  for (i=26;i--;)
      {
	  temp = *(adresse+ *offsetptr++);
	  *Xptr++ = (temp != (GENTYPE)label1) && (temp != (GENTYPE)label2);
      }
		       ;
  return(OK);
}
#FUNCTION_END
#TYPED_FUNC_END

/*----------------------------------------------------------------------------*/

#TYPED_FUNC_BEGIN VipComputeCstarForLabel_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*----------------------------------------------------------------------------*/
int VipComputeCstarForLabel_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int label)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipComputeCstarForLabel_GENSTRING");
      VipPrintfExit("VipComputeCstarForLabel_GENSTRING");
      return(TOPO_PB);
    }
  VipFill26NeighborhoodForLabel_GENSTRING(top,adresse,label);
  return(VipGetNumberOfComponentsIn26Neighborhood(top,CONNECTIVITY_26,CC_26_ADJACENT));
}
#FUNCTION_END
#TYPED_FUNC_END

#TYPED_FUNC_BEGIN VipComputeCstarForLabelComplement_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*----------------------------------------------------------------------------*/
int VipComputeCstarForLabelComplement_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int label)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipComputeCstarForLabelComplement_GENSTRING");
      VipPrintfExit("VipComputeCstarForLabelComplement_GENSTRING");
      return(TOPO_PB);
    }
  VipFill26NeighborhoodForLabelComplement_GENSTRING(top,adresse,label);
  return(VipGetNumberOfComponentsIn26Neighborhood(top,CONNECTIVITY_26,CC_26_ADJACENT));
}
#FUNCTION_END
#TYPED_FUNC_END

/*----------------------------------------------------------------------------*/
#TYPED_FUNC_BEGIN VipComputeCbarForLabel_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*----------------------------------------------------------------------------*/
int VipComputeCbarForLabel_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int label)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipComputeCbarForLabel_GENSTRING");
      VipPrintfExit("VipComputeCbarForLabel_GENSTRING");
      return(TOPO_PB);
    }
  VipFill26NeighborhoodForLabelComplement_GENSTRING(top,adresse,label);
  return(VipGetNumberOfComponentsIn18Neighborhood(top,CONNECTIVITY_6,CC_6_ADJACENT));
}
#FUNCTION_END
#TYPED_FUNC_END

/*----------------------------------------------------------------------------*/
#TYPED_FUNC_BEGIN VipComputeCbarForLabelComplement_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*----------------------------------------------------------------------------*/
int VipComputeCbarForLabelComplement_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int label)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipComputeCbarForLabelComplement_GENSTRING");
      VipPrintfExit("VipComputeCbarForLabelComplement_GENSTRING");
      return(TOPO_PB);
    }
  VipFill26NeighborhoodForLabel_GENSTRING(top,adresse,label);
  return(VipGetNumberOfComponentsIn18Neighborhood(top,CONNECTIVITY_6,CC_6_ADJACENT));
}
#FUNCTION_END
#TYPED_FUNC_END

/*----------------------------------------------------------------------------*/
#TYPED_FUNC_BEGIN VipComputeCbarForTwoLabelComplement_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*----------------------------------------------------------------------------*/
int VipComputeCbarForTwoLabelComplement_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int label1, int label2)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipComputeCbarForTwoLabelComplement_GENSTRING");
      VipPrintfExit("VipComputeCbarForTwoLabelComplement_GENSTRING");
      return(TOPO_PB);
    }
  VipFill26NeighborhoodForTwoLabel_GENSTRING(top,adresse,label1,label2);
  return(VipGetNumberOfComponentsIn18Neighborhood(top,CONNECTIVITY_6,CC_6_ADJACENT));
}
#FUNCTION_END
#TYPED_FUNC_END


/*----------------------------------------------------------------------------*/
#TYPED_FUNC_BEGIN VipComputeLocalCCNumbersForLabel_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*----------------------------------------------------------------------------*/
int VipComputeLocalCCNumbersForLabel_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int label, int *Cstar, int *Cbar)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipComputeLocalCCNumbersForLabel_GENSTRING");
      VipPrintfExit("VipComputeLocalCCNumbersForLabel_GENSTRING");
      return(PB);
    }
  VipFill26NeighborhoodForLabel_GENSTRING(top,adresse,label);
  *Cstar = VipGetNumberOfComponentsIn26Neighborhood(top,CONNECTIVITY_26,CC_26_ADJACENT);
  VipFlipTopology26NeighborhoodValueTable(top);
  *Cbar = VipGetNumberOfComponentsIn18Neighborhood(top,CONNECTIVITY_6,CC_6_ADJACENT);

  return(OK);
}
#FUNCTION_END
#TYPED_FUNC_END

/*----------------------------------------------------------------------------*/
#TYPED_FUNC_BEGIN VipComputeLocalCCNumbersForLabelComplement_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*----------------------------------------------------------------------------*/
int VipComputeLocalCCNumbersForLabelComplement_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int label, int *Cstar, int *Cbar)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 
 
  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipComputeLocalCCNumbersForLabelComplement_GENSTRING");
      VipPrintfExit("VipComputeLocalCCNumbersForLabelComplement_GENSTRING");
      return(PB);
    }
  VipFill26NeighborhoodForLabelComplement_GENSTRING(top,adresse,label);
  *Cstar = VipGetNumberOfComponentsIn26Neighborhood(top,CONNECTIVITY_26,CC_26_ADJACENT);
  VipFlipTopology26NeighborhoodValueTable(top);
  *Cbar = VipGetNumberOfComponentsIn18Neighborhood(top,CONNECTIVITY_6,CC_6_ADJACENT);

  return(OK);
}
#FUNCTION_END
#TYPED_FUNC_END

/*----------------------------------------------------------------------------*/
#TYPED_FUNC_BEGIN VipComputeTopologicalClassificationForLabel_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*----------------------------------------------------------------------------*/
int VipComputeTopologicalClassificationForLabel_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int label)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 
  int Cbar, Cstar;

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipComputeTopologicalClassificationForLabel_GENSTRING");
      VipPrintfExit("VipComputeTopologicalClassificationForLabel_GENSTRING");
      return(TOPO_PB);
    }
  VipFill26NeighborhoodForLabelComplement_GENSTRING(top,adresse,label);
  Cbar = VipGetNumberOfComponentsIn18Neighborhood(top,CONNECTIVITY_6,CC_6_ADJACENT);
  if(Cbar==0) return(TOPO_VOLUME_POINT);
  VipFlipTopology26NeighborhoodValueTable(top);
  Cstar = VipGetNumberOfComponentsIn26Neighborhood(top,CONNECTIVITY_26,CC_26_ADJACENT);
  return(TopologicalClassification[Cstar][Cbar]);
}
#FUNCTION_END
#TYPED_FUNC_END

/*----------------------------------------------------------------------------*/
#TYPED_FUNC_BEGIN VipComputeTopologicalClassificationForLabelComplement_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*----------------------------------------------------------------------------*/
int VipComputeTopologicalClassificationForLabelComplement_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int label)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 
  int Cbar, Cstar;

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipComputeTopologicalClassificationForLabelComplement_GENSTRING");
      VipPrintfExit("VipComputeTopologicalClassificationForLabelComplement_GENSTRING");
      return(TOPO_PB);
    }
  VipFill26NeighborhoodForLabel_GENSTRING(top,adresse,label);
  Cbar = VipGetNumberOfComponentsIn18Neighborhood(top,CONNECTIVITY_6,CC_6_ADJACENT);
  if(Cbar==0) return(TOPO_VOLUME_POINT);
  VipFlipTopology26NeighborhoodValueTable(top);
  Cstar = VipGetNumberOfComponentsIn26Neighborhood(top,CONNECTIVITY_26,CC_26_ADJACENT);
  return(TopologicalClassification[Cstar][Cbar]);

}
#FUNCTION_END
#TYPED_FUNC_END

/*----------------------------------------------------------------------------*/
#TYPED_FUNC_BEGIN VipComputeTopologicalClassificationForLabel_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*----------------------------------------------------------------------------*/
int VipComputeTopologicalClassificationForTwoLabel_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int inside, int outside)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 
  int Cbar, Cstar;

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipComputeTopologicalClassificationForTwoLabel_GENSTRING");
      VipPrintfExit("VipComputeTopologicalClassificationForTwoLabel_GENSTRING");
      return(TOPO_PB);
    }
  VipFill26NeighborhoodForTwoLabelComplement_GENSTRING(top,adresse,inside,outside);
  Cbar = VipGetNumberOfComponentsIn18Neighborhood(top,CONNECTIVITY_6,CC_6_ADJACENT);
  if(Cbar==0) return(TOPO_VOLUME_POINT);
  VipFlipTopology26NeighborhoodValueTable(top);
  Cstar = VipGetNumberOfComponentsIn26Neighborhood(top,CONNECTIVITY_26,CC_26_ADJACENT);
  return(TopologicalClassification[Cstar][Cbar]);

}
#FUNCTION_END
#TYPED_FUNC_END

/*----------------------------------------------------------------------------*/
#TYPED_FUNC_BEGIN VipComputeTopologicalClassificationForLabelComplement_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*----------------------------------------------------------------------------*/
int VipComputeTopologicalClassificationForTwoLabelComplement_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int inside, int outside)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 
  int Cbar, Cstar;

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipComputeTopologicalClassificationForTwoLabelComplement_GENSTRING");
      VipPrintfExit("VipComputeTopologicalClassificationForTwoLabelComplement_GENSTRING");
      return(TOPO_PB);
    }
  VipFill26NeighborhoodForTwoLabel_GENSTRING(top,adresse,inside,outside);
  Cbar = VipGetNumberOfComponentsIn18Neighborhood(top,CONNECTIVITY_6,CC_6_ADJACENT);
  if(Cbar==0) return(TOPO_VOLUME_POINT);
  VipFlipTopology26NeighborhoodValueTable(top);
  Cstar = VipGetNumberOfComponentsIn26Neighborhood(top,CONNECTIVITY_26,CC_26_ADJACENT);
  return(TopologicalClassification[Cstar][Cbar]);

}
#FUNCTION_END
#TYPED_FUNC_END

/*----------------------------------------------------------------------------*/
#TYPED_FUNC_BEGIN VipIsSimplePointForLabel_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*----------------------------------------------------------------------------*/
int VipIsASimplePointForLabel_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int label)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 

  int Cbar, Cstar;

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipIsSimplePointForLabel_GENSTRING");
      VipPrintfExit("VipIsSimplePointForLabel_GENSTRING");
      return(TOPO_PB);
    }
  VipFill26NeighborhoodForLabelComplement_GENSTRING(top,adresse,label);
  Cbar = VipGetNumberOfComponentsIn18Neighborhood(top,CONNECTIVITY_6,CC_6_ADJACENT);
  if(Cbar!=1) return(VFALSE);
  VipFlipTopology26NeighborhoodValueTable(top);
  Cstar = VipGetNumberOfComponentsIn26Neighborhood(top,CONNECTIVITY_26,CC_26_ADJACENT);
  if (Cstar!=1) return(VFALSE);
  else return(VTRUE);

}
#FUNCTION_END
#TYPED_FUNC_END

/*----------------------------------------------------------------------------*/
#TYPED_FUNC_BEGIN VipIsSimplePointForLabelComplement_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*----------------------------------------------------------------------------*/
int VipIsASimplePointForLabelComplement_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int label)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 
  int Cbar,Cstar;

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipIsSimplePointForLabelComplement_GENSTRING");
      VipPrintfExit("VipIsSimplePointForLabelComplement_GENSTRING");
      return(TOPO_PB);
    }
  VipFill26NeighborhoodForLabel_GENSTRING(top,adresse,label);
  Cbar = VipGetNumberOfComponentsIn18Neighborhood(top,CONNECTIVITY_6,CC_6_ADJACENT);
  if(Cbar!=1) return(VFALSE);
  VipFlipTopology26NeighborhoodValueTable(top);
  Cstar = VipGetNumberOfComponentsIn26Neighborhood(top,CONNECTIVITY_26,CC_26_ADJACENT);
  if (Cstar!=1) return(VFALSE);
  else return(VTRUE);

}
#FUNCTION_END
#TYPED_FUNC_END

/*----------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------*/
#TYPED_FUNC_BEGIN VipIsSimplePointForLabel_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*any surface or surface junction point*/
/*----------------------------------------------------------------------------*/
int VipIsASurfacesPointForLabel_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int label)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 
  int Cbar;

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipIsSimplePointForLabel_GENSTRING");
      VipPrintfExit("VipIsSimplePointForLabel_GENSTRING");
      return(TOPO_PB);
    }
  VipFill26NeighborhoodForLabelComplement_GENSTRING(top,adresse,label);
  Cbar = VipGetNumberOfComponentsIn18Neighborhood(top,CONNECTIVITY_6,CC_6_ADJACENT);
  if(Cbar<=1) return(VFALSE);
  else return(VTRUE);

}
#FUNCTION_END
#TYPED_FUNC_END

/*----------------------------------------------------------------------------*/
#TYPED_FUNC_BEGIN VipIsSimplePointForLabel_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*any surface or surface junction point*/
/*----------------------------------------------------------------------------*/
int VipIsASurfacesPointForLabelComplement_GENSTRING(Topology26Neighborhood *top, 
                                                  GENTYPE *adresse, int label)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 
  int Cbar;

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipIsSimplePointForLabel_GENSTRING");
      VipPrintfExit("VipIsSimplePointForLabel_GENSTRING");
      return(TOPO_PB);
    }
  VipFill26NeighborhoodForLabel_GENSTRING(top,adresse,label);
  Cbar = VipGetNumberOfComponentsIn18Neighborhood(top,CONNECTIVITY_6,CC_6_ADJACENT);
  if(Cbar<=1) return(VFALSE);
  else return(VTRUE);

}
#FUNCTION_END
#TYPED_FUNC_END

#TYPED_FUNC_BEGIN VipIsSimplePointForLabel_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*any surface or surface junction point*/
/*----------------------------------------------------------------------------*/
int VipIsACurvesPointForLabel_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int label)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 
  int Cbar,Cstar;

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipIsSimplePointForLabel_GENSTRING");
      VipPrintfExit("VipIsSimplePointForLabel_GENSTRING");
      return(TOPO_PB);
    }
  VipFill26NeighborhoodForLabelComplement_GENSTRING(top,adresse,label);
  Cbar = VipGetNumberOfComponentsIn18Neighborhood(top,CONNECTIVITY_6,CC_6_ADJACENT);
  if(Cbar>1) return(VFALSE); /*surface*/
  VipFlipTopology26NeighborhoodValueTable(top);
  Cstar = VipGetNumberOfComponentsIn26Neighborhood(top,CONNECTIVITY_26,CC_26_ADJACENT);
  if (Cstar>1) return(VTRUE);
  else return(VFALSE);
}
#FUNCTION_END
#TYPED_FUNC_END

#TYPED_FUNC_BEGIN VipIsSimplePointForLabel_GENSTRING
#TYPE_LIST_EXTERN ANY_INT
#PROTOTYPE_BEGIN
/*any surface or surface junction point*/
/*----------------------------------------------------------------------------*/
int VipIsACurvesPointForLabelComplement_GENSTRING(Topology26Neighborhood *top, 
                                        GENTYPE *adresse, int label)
#PROTOTYPE_END
#FUNCTION_BEGIN
{ 
  int Cbar,Cstar;

  if(top==NULL || adresse==NULL)
    {
      VipPrintfError("arguments in VipIsSimplePointForLabel_GENSTRING");
      VipPrintfExit("VipIsSimplePointForLabel_GENSTRING");
      return(TOPO_PB);
    }
  VipFill26NeighborhoodForLabel_GENSTRING(top,adresse,label);
  Cbar = VipGetNumberOfComponentsIn18Neighborhood(top,CONNECTIVITY_6,CC_6_ADJACENT);
  if(Cbar>1) return(VFALSE); /*surface*/
  VipFlipTopology26NeighborhoodValueTable(top);
  Cstar = VipGetNumberOfComponentsIn26Neighborhood(top,CONNECTIVITY_26,CC_26_ADJACENT);
  if (Cstar>1) return(VTRUE);
  else return(VFALSE);
}
#FUNCTION_END
#TYPED_FUNC_END
